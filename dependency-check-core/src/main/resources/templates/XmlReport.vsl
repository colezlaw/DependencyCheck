#**
This file is part of Dependency-Check.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Copyright (c) 2012 Jeremy Long. All Rights Reserved.

@author Jeremy Long <jeremy.long@owasp.org>
@version 1.1
*#<?xml version="1.0"?>
<analysis xmlns="https://www.owasp.org/index.php/OWASP_Dependency_Check#1.1">
    <scanInfo>
        <engineVersion>$version</engineVersion>
#foreach($prop in $properties.getMetaData().entrySet())
        <dataSource>
            <name>$esc.xml($prop.key)</name>
            <timestamp>$esc.xml($prop.value)</timestamp>
        </dataSource>
#end
    </scanInfo>
    <projectInfo>
        <name>$esc.xml($applicationName)</name>
        <reportDate>$date</reportDate>
        <credits>This report contains data retrieved from the National Vulnerability Database: http://nvd.nist.gov</credits>
    </projectInfo>
    <dependencies>
#foreach($dependency in $dependencies)
        <dependency>
            <fileName>$esc.xml($dependency.FileName)</fileName>
            <filePath>$esc.xml($dependency.FilePath)</filePath>
            <md5>$esc.xml($dependency.Md5sum)</md5>
            <sha1>$esc.xml($dependency.Sha1sum)</sha1>
#if ($dependency.description)
            <description>$esc.xml($dependency.description)</description>
#end
#if ($dependency.license)
            <license>$esc.xml($dependency.license)</license>
#end
#if ($dependency.getRelatedDependencies().size()>0)
            <relatedDependencies>
#foreach($related in $dependency.getRelatedDependencies())
                <relatedDependency>
                    <filePath>$esc.xml($related.FilePath)</filePath>
                    <sha1>$esc.xml($related.Sha1sum)</sha1>
                    <md5>$esc.xml($related.Md5sum)</md5>
                </relatedDependency>
#end
            </relatedDependencies>
#end
#if ( $dependency.analysisExceptions.size() != 0 )
            <analysisExceptions>
#foreach($ex in $dependency.analysisExceptions)
                <exception>
                    <message>$esc.xml($ex.message)</message>
#if ( $ex.stackTrace )
                    <stackTrace>
#foreach ($st in $ex.stackTrace)
                        <trace>$esc.xml($st)</trace>
#end
                    </stackTrace>
#end
#if ( $ex.cause )
                    <innerException>
                        <message>$esc.xml($ex.cause.message)</message>
#if ( $ex.cause.stackTrace )
                        <stackTrace>
#foreach ($st in $ex.cause.stackTrace)
                            <trace>$esc.xml($st)</trace>
#end
                        </stackTrace>
#end
                    </innerException>
#end
                </exception>
#end
            </analysisExceptions>
#end
            <evidenceCollected>
#foreach($evidence in $dependency.getEvidenceUsed())
                <evidence>
                    <source>$esc.xml($evidence.getSource())</source>
                    <name>$esc.xml($evidence.getName())</name>
                    <value>$esc.xml($evidence.getValue().trim())</value>
                </evidence>
#end
            </evidenceCollected>
#if($dependency.getIdentifiers().size()>0)
            <identifiers>
#foreach($id in $dependency.getIdentifiers())
                <identifier type="$esc.xml($id.type)">
                    <name>($id.value)</name>
#if( $id.url )
                    <url>$esc.xml($id.url)</url>
#end
#if( $id.description )
                    <description>$esc.xml($id.description)</description>
#end
                </identifier>
#end
            </identifiers>
#end
#if($dependency.getVulnerabilities().size()>0)
            <vulnerabilities>
#foreach($vuln in $dependency.getVulnerabilities())
                <vulnerability>
                    <name>$esc.xml($vuln.name)</name>
                    <cvssScore>$vuln.cvssScore</cvssScore>
#if ($vuln.cvssScore<4.0)
                    <severity>Low</severity>
#elseif ($vuln.cvssScore>=7.0)
                    <severity>High</severity>
#else
                    <severity>Medium</severity>
#end
#if ($vuln.cwe)
                    <cwe>$esc.xml($vuln.cwe)</cwe>
#end
                    <description>$esc.xml($vuln.description)</description>
                    <references>
#foreach($ref in $vuln.getReferences())
                        <reference>
                            <source>$esc.xml($ref.source)</source>
                            <url>$esc.xml($ref.url)</url>
                            <name>$esc.xml($ref.name)</name>
                        </reference>
#end
                    </references>
                    <vulnerableSoftware>
#foreach($vs in $vuln.getVulnerableSoftware())
                        <software#if($vs.hasPreviousVersion()) allPreviousVersion="true"#end>$esc.xml($vs.name)</software>
#end
                    </vulnerableSoftware>
                </vulnerability>
#end
            </vulnerabilities>
#end
        </dependency>
#end
    </dependencies>
</analysis>